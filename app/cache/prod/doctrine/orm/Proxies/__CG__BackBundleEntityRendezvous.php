<?php

namespace Proxies\__CG__\BackBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Rendezvous extends \BackBundle\Entity\Rendezvous implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'duree', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'minute', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'heure', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'jour', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'mois', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'annee', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'type', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'medecins', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'patients', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'isValidated');
        }

        return array('__isInitialized__', 'id', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'duree', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'minute', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'heure', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'jour', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'mois', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'annee', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'type', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'medecins', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'patients', '' . "\0" . 'BackBundle\\Entity\\Rendezvous' . "\0" . 'isValidated');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Rendezvous $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getDuree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuree', array());

        return parent::getDuree();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuree($duree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuree', array($duree));

        return parent::setDuree($duree);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinute', array());

        return parent::getMinute();
    }

    /**
     * {@inheritDoc}
     */
    public function getHeure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeure', array());

        return parent::getHeure();
    }

    /**
     * {@inheritDoc}
     */
    public function getJour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJour', array());

        return parent::getJour();
    }

    /**
     * {@inheritDoc}
     */
    public function getMois()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMois', array());

        return parent::getMois();
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnee', array());

        return parent::getAnnee();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinute($minute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinute', array($minute));

        return parent::setMinute($minute);
    }

    /**
     * {@inheritDoc}
     */
    public function setHeure($heure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeure', array($heure));

        return parent::setHeure($heure);
    }

    /**
     * {@inheritDoc}
     */
    public function setJour($jour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJour', array($jour));

        return parent::setJour($jour);
    }

    /**
     * {@inheritDoc}
     */
    public function setMois($mois)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMois', array($mois));

        return parent::setMois($mois);
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnee($annee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnee', array($annee));

        return parent::setAnnee($annee);
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedecins()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedecins', array());

        return parent::getMedecins();
    }

    /**
     * {@inheritDoc}
     */
    public function addMedecin(\SecurityUserBundle\Entity\Medecin $medecins)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMedecin', array($medecins));

        return parent::addMedecin($medecins);
    }

    /**
     * {@inheritDoc}
     */
    public function setMedecins($items)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedecins', array($items));

        return parent::setMedecins($items);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function getPatients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatients', array());

        return parent::getPatients();
    }

    /**
     * {@inheritDoc}
     */
    public function setPatients($patients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPatients', array($patients));

        return parent::setPatients($patients);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsValidated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsValidated', array());

        return parent::getIsValidated();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsValidated($isValidated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsValidated', array($isValidated));

        return parent::setIsValidated($isValidated);
    }

}
